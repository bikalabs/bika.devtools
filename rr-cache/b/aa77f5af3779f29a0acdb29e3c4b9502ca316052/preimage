<?xml version="1.0" encoding="UTF-8"?>
<<<<<<<

<!-- Operation Definitions -->
<registry xmlns:i18n="http://xml.zope.org/namespaces/i18n" i18n:domain="bika">

  <!-- QueryField declarations  -->

  <!-- Analysis Request group -->
  <records interface="plone.app.querystring.interfaces.IQueryField"
           prefix="bika.lims.bika_catalog_query.field.portal_type">
      <value key="title" i18n:translate="">Type</value>
      <value key="description" i18n:translate="">An item's type (e.g. Event)</value>
      <value key="enabled">True</value>
      <value key="sortable">False</value>
      <value key="operations">
          <element>plone.app.querystring.operation.selection.is</element>
      </value>
      <value key="vocabulary">bika.lims.vocabularies.BikaCatalogTypes</value>
     <value key="group" i18n:translate="">Metadata</value>
  </records>

  <records interface="plone.app.querystring.interfaces.IQueryField"
           prefix="bika.lims.bika_catalog_query.field.getRequestID">
=======
<!-- Operation Definitions -->
<registry xmlns:i18n="http://xml.zope.org/namespaces/i18n" i18n:domain="bika">
  <!-- QueryField declarations  -->
  <!-- Analysis Request group -->
  <records interface="plone.app.querystring.interfaces.IQueryField"
           prefix="bika.lims.analysisrequestquery.field.getRequestID">
>>>>>>>
    <value key="title" i18n:translate="">Request ID</value>
    <value key="description" i18n:translate="" i18n_domain="plone">Title</value>
    <value key="enabled">True</value>
    <value key="sortable">True</value>
    <value key="operations">
      <element>plone.app.querystring.operation.string.contains</element>
      <element>plone.app.querystring.operation.string.is</element>
    </value>
    <value key="group" i18n:translate="" i18ndomain="plone">Analysis Request</value>
  </records>
<<<<<<<

  <records interface="plone.app.querystring.interfaces.IQueryField"
           prefix="bika.lims.bika_catalog_query.field.getClientTitle">
=======
  <records interface="plone.app.querystring.interfaces.IQueryField"
           prefix="bika.lims.analysisrequestquery.field.getClientTitle">
>>>>>>>
    <value key="title" i18n:translate="">Client Name</value>
    <value key="description" i18n:translate=""/>
    <value key="enabled">True</value>
    <value key="sortable">True</value>
    <value key="operations">
      <element>plone.app.querystring.operation.string.contains</element>
      <element>plone.app.querystring.operation.string.is</element>
    </value>
    <vocabulary>bika.lims.vocabularies.Clients</vocabulary>
    <value key="group" i18n:translate="" i18ndomain="plone">Analysis Request</value>
  </records>
<<<<<<<

  <records interface="plone.app.querystring.interfaces.IQueryField"
           prefix="bika.lims.bika_catalog_query.field.getContactTitle">
=======
  <records interface="plone.app.querystring.interfaces.IQueryField"
           prefix="bika.lims.analysisrequestquery.field.getContactTitle">
>>>>>>>
    <value key="title" i18n:translate="">Contact Name</value>
    <value key="description" i18n:translate=""/>
    <value key="enabled">True</value>
    <value key="sortable">True</value>
    <value key="operations">
      <element>plone.app.querystring.operation.string.contains</element>
      <element>plone.app.querystring.operation.string.is</element>
    </value>
    <vocabulary>bika.lims.vocabularies.ClientContacts</vocabulary>
    <value key="group" i18n:translate="" i18ndomain="plone">Analysis Request</value>
  </records>
<<<<<<<

  <records interface="plone.app.querystring.interfaces.IQueryField"
           prefix="bika.lims.bika_catalog_query.field.getProfileTitle">
=======
  <records interface="plone.app.querystring.interfaces.IQueryField"
           prefix="bika.lims.analysisrequestquery.field.getProfileTitle">
>>>>>>>
    <value key="title" i18n:translate="">Analysis Profile</value>
    <value key="description" i18n:translate=""/>
    <value key="enabled">True</value>
    <value key="sortable">True</value>
    <value key="operations">
      <element>plone.app.querystring.operation.string.contains</element>
      <element>plone.app.querystring.operation.string.is</element>
    </value>
    <vocabulary>bika.lims.vocabularies.AnalysisProfiles</vocabulary>
    <value key="group" i18n:translate="" i18ndomain="plone">Analysis Request</value>
  </records>
<<<<<<<

  <records interface="plone.app.querystring.interfaces.IQueryField"
           prefix="bika.lims.bika_catalog_query.field.getClientOrderNumber">
=======
  <records interface="plone.app.querystring.interfaces.IQueryField"
           prefix="bika.lims.analysisrequestquery.field.getClientOrderNumber">
>>>>>>>
    <value key="title" i18n:translate="">Client Order</value>
    <value key="description" i18n:translate=""/>
    <value key="enabled">True</value>
    <value key="sortable">True</value>
    <value key="operations">
      <element>plone.app.querystring.operation.string.contains</element>
      <element>plone.app.querystring.operation.string.is</element>
    </value>
    <value key="group" i18n:translate="" i18ndomain="plone">Analysis Request</value>
  </records>
<<<<<<<

  <records interface="plone.app.querystring.interfaces.IQueryField"
           prefix="bika.lims.bika_catalog_query.getInvoiced">
=======
  <records interface="plone.app.querystring.interfaces.IQueryField"
           prefix="bika.lims.analysisrequestquery.getInvoiced">
>>>>>>>
    <value key="title" i18n:translate="">Invoiced</value>
    <value key="description" i18n:translate="">Find items which have been invoiced.</value>
    <value key="enabled">True</value>
    <value key="sortable">False</value>
    <value key="operations">
      <element>plone.app.querystring.operation.boolean.isTrue</element>
      <element>plone.app.querystring.operation.boolean.isFalse</element>
    </value>
    <value key="group" i18n:translate="" i18n_domain="plone">Analysis Request</value>
  </records>
<<<<<<<

  <records interface="plone.app.querystring.interfaces.IQueryField"
           prefix="bika.lims.bika_catalog_query.review_state">
=======
  <records interface="plone.app.querystring.interfaces.IQueryField"
           prefix="bika.lims.analysisrequestquery.review_state">
>>>>>>>
    <value key="title" i18n:translate="" i18n_domain="plone">Review state</value>
    <value key="description" i18n:translate="" i18n_domain="plone">An item's workflow state (e.g.published)</value>
    <value key="enabled">True</value>
    <value key="sortable">True</value>
    <value key="operations">
      <element>plone.app.querystring.operation.selection.is</element>
    </value>
    <value key="vocabulary">bika.lims.vocabularies.AnalysisRequestWorkflowStates</value>
    <value key="group" i18n:translate="" i18n_domain="plone">Metadata</value>
  </records>
<<<<<<<

  <!-- Analyses group -->
  <records interface="plone.app.querystring.interfaces.IQueryField"
           prefix="bika.lims.bika_catalog_query.field.getAnalysisCategory">
=======
  <!-- Analyses group -->
  <records interface="plone.app.querystring.interfaces.IQueryField"
           prefix="bika.lims.analysisrequestquery.field.getAnalysisCategory">
>>>>>>>
    <value key="title" i18n:translate="" i18n_domain="plone">Analysis Category</value>
    <value key="description" i18n:translate="">Analysis requests will be selected if any of their analyses' services are in this category.</value>
    <value key="enabled">True</value>
    <value key="sortable">False</value>
    <value key="operations">
      <element>plone.app.querystring.operation.selection.is</element>
    </value>
    <value key="vocabulary">bika.lims.vocabularies.AnalysisCategories</value>
    <value key="group" i18n:translate="">Analyses</value>
  </records>
<<<<<<<

  <records interface="plone.app.querystring.interfaces.IQueryField"
           prefix="bika.lims.bika_catalog_query.field.getAnalysisService">
=======
  <records interface="plone.app.querystring.interfaces.IQueryField"
           prefix="bika.lims.analysisrequestquery.field.getAnalysisService">
>>>>>>>
    <value key="title" i18n:translate="" i18n_domain="plone">Analysis Service</value>
    <value key="description" i18n:translate="">Analysis requests will be selected if any of their analyses have this analysis service selected.</value>
    <value key="enabled">True</value>
    <value key="sortable">False</value>
    <value key="operations">
      <element>plone.app.querystring.operation.selection.is</element>
    </value>
    <value key="vocabulary">bika.lims.vocabularies.AnalysisServices</value>
    <value key="group" i18n:translate="">Analyses</value>
  </records>
<<<<<<<

  <records interface="plone.app.querystring.interfaces.IQueryField"
           prefix="bika.lims.bika_catalog_query.field.getAnalysts">
=======
  <records interface="plone.app.querystring.interfaces.IQueryField"
           prefix="bika.lims.analysisrequestquery.field.getAnalysts">
>>>>>>>
    <value key="title" i18n:translate="">Analyst</value>
    <value key="description" i18n:translate="">Select only analysis requests where one or more analyses were analyzed by this user.</value>
    <value key="enabled">True</value>
    <value key="sortable">True</value>
    <value key="operations">
      <element>plone.app.querystring.operation.string.is</element>
      <element>plone.app.querystring.operation.string.currentUser</element>
    </value>
    <value key="vocabulary">bika.lims.vocabularies.Analysts</value>
    <value key="group" i18n:translate="">Analyses</value>
  </records>
<<<<<<<

  <!-- Sample group -->
  <records interface="plone.app.querystring.interfaces.IQueryField"
           prefix="bika.lims.bika_catalog_query.field.getClientReference">
=======
  <!-- Sample group -->
  <records interface="plone.app.querystring.interfaces.IQueryField"
           prefix="bika.lims.analysisrequestquery.field.getClientReference">
>>>>>>>
    <value key="title" i18n:translate="">Client Reference</value>
    <value key="description" i18n:translate=""/>
    <value key="enabled">True</value>
    <value key="sortable">True</value>
    <value key="operations">
      <element>plone.app.querystring.operation.string.contains</element>
      <element>plone.app.querystring.operation.string.is</element>
    </value>
    <value key="group" i18n:translate="" i18ndomain="plone">Sample</value>
  </records>
<<<<<<<

  <records interface="plone.app.querystring.interfaces.IQueryField"
           prefix="bika.lims.bika_catalog_query.field.getClientSampleID">
=======
  <records interface="plone.app.querystring.interfaces.IQueryField"
           prefix="bika.lims.analysisrequestquery.field.getClientSampleID">
>>>>>>>
    <value key="title" i18n:translate="">Client Sample ID</value>
    <value key="description" i18n:translate=""/>
    <value key="enabled">True</value>
    <value key="sortable">True</value>
    <value key="operations">
      <element>plone.app.querystring.operation.string.contains</element>
      <element>plone.app.querystring.operation.string.is</element>
    </value>
    <value key="group" i18n:translate="" i18ndomain="plone">Sample</value>
  </records>
<<<<<<<

  <records interface="plone.app.querystring.interfaces.IQueryField"
           prefix="bika.lims.bika_catalog_query.field.getSampleTypeTitle">
=======
  <records interface="plone.app.querystring.interfaces.IQueryField"
           prefix="bika.lims.analysisrequestquery.field.getSampleTypeTitle">
>>>>>>>
    <value key="title" i18n:translate="">Sample Type</value>
    <value key="description" i18n:translate=""/>
    <value key="enabled">True</value>
    <value key="sortable">True</value>
    <value key="operations">
      <element>plone.app.querystring.operation.string.is</element>
    </value>
    <vocabulary>bika.lims.vocabularies.SampleTypes</vocabulary>
    <value key="group" i18n:translate="" i18ndomain="plone">Sample</value>
  </records>
<<<<<<<

  <records interface="plone.app.querystring.interfaces.IQueryField"
           prefix="bika.lims.bika_catalog_query.field.getSamplePointTitle">
=======
  <records interface="plone.app.querystring.interfaces.IQueryField"
           prefix="bika.lims.analysisrequestquery.field.getSamplePointTitle">
>>>>>>>
    <value key="title" i18n:translate="">Sample Point</value>
    <value key="description" i18n:translate=""/>
    <value key="enabled">True</value>
    <value key="sortable">True</value>
    <value key="operations">
      <element>plone.app.querystring.operation.string.is</element>
    </value>
    <vocabulary>bika.lims.vocabularies.SamplePoints</vocabulary>
    <value key="group" i18n:translate="" i18ndomain="plone">Sample</value>
  </records>
<<<<<<<

  <!-- Dates group -->
  <records interface="plone.app.querystring.interfaces.IQueryField"
           prefix="bika.lims.bika_catalog_query.field.getDateSampled">
=======
  <!-- Dates group -->
  <records interface="plone.app.querystring.interfaces.IQueryField"
           prefix="bika.lims.analysisrequestquery.field.getDateSampled">
>>>>>>>
    <value key="title" i18n:translate="">Date Sampled</value>
    <value key="description" i18n:translate=""/>
    <value key="enabled">True</value>
    <value key="sortable">True</value>
    <value key="operations">
      <element>plone.app.querystring.operation.date.lessThan</element>
      <element>plone.app.querystring.operation.date.largerThan</element>
      <element>plone.app.querystring.operation.date.between</element>
      <element>plone.app.querystring.operation.date.lessThanRelativeDate</element>
      <element>plone.app.querystring.operation.date.largerThanRelativeDate</element>
      <element>plone.app.querystring.operation.date.today</element>
      <element>plone.app.querystring.operation.date.beforeToday</element>
      <element>plone.app.querystring.operation.date.afterToday</element>
    </value>
    <value key="group" i18n:translate="" i18n:domain="plone">Dates</value>
  </records>
<<<<<<<

  <records interface="plone.app.querystring.interfaces.IQueryField"
           prefix="bika.lims.bika_catalog_query.field.created">
=======
  <records interface="plone.app.querystring.interfaces.IQueryField"
           prefix="bika.lims.analysisrequestquery.field.created">
>>>>>>>
    <value key="title" i18n:translate="">Date Created</value>
    <value key="description" i18n:translate=""/>
    <value key="enabled">True</value>
    <value key="sortable">True</value>
    <value key="operations">
      <element>plone.app.querystring.operation.date.lessThan</element>
      <element>plone.app.querystring.operation.date.largerThan</element>
      <element>plone.app.querystring.operation.date.between</element>
      <element>plone.app.querystring.operation.date.lessThanRelativeDate</element>
      <element>plone.app.querystring.operation.date.largerThanRelativeDate</element>
      <element>plone.app.querystring.operation.date.today</element>
      <element>plone.app.querystring.operation.date.beforeToday</element>
      <element>plone.app.querystring.operation.date.afterToday</element>
    </value>
    <value key="group" i18n:translate="" i18n:domain="plone">Dates</value>
  </records>
<<<<<<<

  <records interface="plone.app.querystring.interfaces.IQueryField"
           prefix="bika.lims.bika_catalog_query.field.getDateReceived">
=======
  <records interface="plone.app.querystring.interfaces.IQueryField"
           prefix="bika.lims.analysisrequestquery.field.getDateReceived">
>>>>>>>
    <value key="title" i18n:translate="">Date Received</value>
    <value key="description" i18n:translate=""/>
    <value key="enabled">True</value>
    <value key="sortable">True</value>
    <value key="operations">
      <element>plone.app.querystring.operation.date.lessThan</element>
      <element>plone.app.querystring.operation.date.largerThan</element>
      <element>plone.app.querystring.operation.date.between</element>
      <element>plone.app.querystring.operation.date.lessThanRelativeDate</element>
      <element>plone.app.querystring.operation.date.largerThanRelativeDate</element>
      <element>plone.app.querystring.operation.date.today</element>
      <element>plone.app.querystring.operation.date.beforeToday</element>
      <element>plone.app.querystring.operation.date.afterToday</element>
    </value>
    <value key="group" i18n:translate="" i18n:domain="plone">Dates</value>
  </records>
<<<<<<<

  <records interface="plone.app.querystring.interfaces.IQueryField"
           prefix="bika.lims.bika_catalog_query.field.getDatePublished">
=======
  <records interface="plone.app.querystring.interfaces.IQueryField"
           prefix="bika.lims.analysisrequestquery.field.getDatePublished">
>>>>>>>
    <value key="title" i18n:translate="">Date Published</value>
    <value key="description" i18n:translate=""/>
    <value key="enabled">True</value>
    <value key="sortable">True</value>
    <value key="operations">
      <element>plone.app.querystring.operation.date.lessThan</element>
      <element>plone.app.querystring.operation.date.largerThan</element>
      <element>plone.app.querystring.operation.date.between</element>
      <element>plone.app.querystring.operation.date.lessThanRelativeDate</element>
      <element>plone.app.querystring.operation.date.largerThanRelativeDate</element>
      <element>plone.app.querystring.operation.date.today</element>
      <element>plone.app.querystring.operation.date.beforeToday</element>
      <element>plone.app.querystring.operation.date.afterToday</element>
    </value>
    <value key="group" i18n:translate="" i18n:domain="plone">Dates</value>
  </records>
<<<<<<<

  <!-- Metadata group-->
  <records interface="plone.app.querystring.interfaces.IQueryField"
           prefix="bika.lims.bika_catalog_query.field.Creator">
=======
  <!-- Metadata group-->
  <records interface="plone.app.querystring.interfaces.IQueryField"
           prefix="bika.lims.analysisrequestquery.field.Creator">
>>>>>>>
    <value key="title" i18n:translate="" i18n_domain="plone">Creator</value>
    <value key="description" i18n:translate="" i18n_domain="plone">The person that created an item</value>
    <value key="enabled">True</value>
    <value key="sortable">True</value>
    <value key="operations">
      <element>plone.app.querystring.operation.string.is</element>
      <element>plone.app.querystring.operation.string.currentUser</element>
    </value>
    <value key="group" i18n:translate="" i18n_domain="plone">Metadata</value>
  </records>
<<<<<<<
=======

>>>>>>>
</registry>
