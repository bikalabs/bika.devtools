<tal:comment replace="nothing"> This template also renders an AJAX table-only
version. use "tal:omit-tag='table_only'" on the elements which should not be
displayed when ajax requests the table. </tal:comment>

<form name="bika_listing_form" method="post" action="workflow_action"
    i18n:domain="bika"
	tal:attributes="id form_id"
	tal:omit-tag="table_only"
	tal:define="
		form_id view/bika_listing/form_id;
		table_only python:(hasattr(view, 'table_only') and view.table_only)
		                  or (hasattr(view.bika_listing, 'table_only') and view.bika_listing.table_only)
		                  or view.request.get('table_only','') == form_id;
		global rowspan python:{};
		global rowspan_max python:{};
		global colspan python:1;
		global colspan_max python:1;
		nosortclass view/get_nosort_class;
		portal context/@@plone_portal_state/portal;
		review_state_id python:request.get(form_id+'_review_state', 'default');
		review_state python:[t for t in view.bika_listing.review_states
							 if t['id'] == review_state_id];
		review_state python:review_state and review_state[0]
							or view.bika_listing.review_states[0];
		toggle_cols python:dict([(col, view.bika_listing.columns[col])
		                         for col in view.bika_listing.columns.keys()
		                         if col in review_state['columns']]);
		specification python:view.request.get('specification', 'lab');
		sm python:modules['AccessControl'].getSecurityManager();
		EditAnalyses python:sm.checkPermission('BIKA: Edit analyses', context);
		ViewResults python:sm.checkPermission('BIKA: View Results', context);
		tabindex view/tabindex;
		user python:sm.getUser();
		roles python:user.getRoles();
		nr_cols python:len(review_state['columns']);
		nr_cols python:view.bika_listing.show_select_column and nr_cols + 1 or nr_cols;
		nr_cols python:view.bika_listing.show_sort_column and nr_cols + 1 or nr_cols;
		nr_cols python:str(nr_cols);">

<input tal:condition="python:not table_only" tal:replace="structure context/@@authenticator/authenticator"/>

<input type="hidden" tal:omit-tag="python:table_only" name="submitted" value="1"/>
<input type="hidden" tal:omit-tag="python:table_only" name="form_id" tal:attributes="value form_id"/>
<input type="hidden" tal:omit-tag="python:table_only" name="view_url"
	tal:attributes="value view/bika_listing/view_url"/>
<input type="hidden" tal:omit-tag="python:table_only" name="portal_type"
	tal:attributes="value view/context/portal_type"/>
<input type="hidden" tal:omit-tag="python:table_only"
	tal:attributes="
		name python:form_id+'_sort_on';
		value python:request.get(form_id+'_sort_on', 'id')"/>
<input type="hidden" tal:omit-tag="python:table_only"
	tal:attributes="
		name python:form_id+'_sort_order';
		value python:request.get(form_id+'_sort_order', 'ascending')"/>

<tal:worksheet-cheat-1 condition="python:hasattr(view.bika_listing, 'analyst')">
	<input type="hidden"
		name="analyst"
		tal:omit-tag="python:table_only"
		tal:attributes="value python:view.bika_listing.analyst"/>
</tal:worksheet-cheat-1>

<tal:worksheet-cheat-2 condition="python:hasattr(view.bika_listing, 'instrument')">
	<input type="hidden"
		name="instrument"
		tal:omit-tag="python:table_only"
		tal:attributes="value python:view.bika_listing.instrument"/>
</tal:worksheet-cheat-2>

<div class='bika-listing-table-container'
     tal:omit-tag="python:table_only">

<tal:comment replace="nothing"> These two hidden fields must be located
directly above the table element Some of the javascript relies on this to
distinguish between data for pages with multiple editable tables.
XXX This should use form_id </tal:comment>

<input type="hidden"
	name="specs"
	tal:omit-tag="python:table_only"
	tal:attributes="value python:hasattr(view.bika_listing, 'json_specs') and
	                             view.bika_listing.json_specs or []"/>
<input type="hidden"
	id="item_data"
	tal:omit-tag="python:table_only"
	tal:condition="python:not table_only"
	name="item_data"
	tal:attributes="value python:hasattr(view.bika_listing, 'json_interim_fields') and
	                             view.bika_listing.json_interim_fields or []"/>
<table
	summary="Content listing"
	tal:attributes="class python:'bika-listing-table'"
	i18n:attributes="summary summary_content_listing;"
	tal:define="
		columns view/bika_listing/columns;
		column_list python:review_state['columns']" style="margin-bottom:0px;">

	<thead>

	<tr style="border:none !important;" tal:condition="python:len(view.bika_listing.review_states) > 1">
<tal:comment replace="nothing">***************
Workflow review state selector
********************************</tal:comment>
	<td tal:attributes="colspan python:nr_cols" class="listing-filter-row">
		<table width="100%" cellpadding="0" cellspacing="0" class="noborder nomargin">
		<tr class="noborder"
			tal:condition="python:len(view.bika_listing.review_states) > 1">
			<td class="review_state_selector noborder" style="whitespace:nowrap">
				<tal:review_states repeat="state view/bika_listing/review_states">
				<a
					tal:define="state_id state/id"
					tal:attributes="
                        href python:view.bika_listing.GET_url(review_state=state['id']);
						value state_id;
						id state/id;
						class python:request.get(form_id + '_review_state', 'default') == state_id
									   and 'selected' or ''"
					tal:content="structure state/title"/>
				</tal:review_states>
			</td>
<tal:comment replace="nothing">***************
filter search
********************************</tal:comment>
			<td class="filter noborder" style="text-align:right;whitespace:nowrap;padding:0 0 0 5px;">
				<tal:filters_enabled
					tal:define="term python:request.get(form_id+'_filter', '');"
					tal:condition="python:hasattr(view.bika_listing, 'filter_indexes') and view.bika_listing.filter_indexes">
					<span class="filter-search-button">&nbsp;</span>
		            <input
						class="filter-search-input" autocomplete="off"
						tal:attributes="
							name python:form_id+'_filter';
							value python:term;"/>
				</tal:filters_enabled>
			</td>
		</tr>
		</table>
	</td>
	</tr>

<tal:comment replace="nothing">***************
Colum Headers
********************************</tal:comment>
	<tr tal:condition="view/items">
		<th class="nosort column"
			id="foldercontents-order-column"
			tal:condition="view/bika_listing/show_sort_column"/>
		<th class="nosort column"
			tal:condition="view/bika_listing/show_select_column">
			<!-- All toggleable columns in this review_state,
			     regardless of state. JS uses this for the popup menu -->
			<input type="hidden"
				tal:condition="view/bika_listing/show_column_toggles"
				tal:attributes="
					id python:form_id+'_toggle_cols';
					value python:modules['json'].dumps(toggle_cols);"/>
			<input
				type="checkbox"
				class="noborder"
				tal:condition="view/bika_listing/show_select_all_checkbox"
				tal:attributes="id string:${view/bika_listing/form_id}_select_all"/>
		</th>
		<tal:col repeat="column column_list">
			<th
				tal:condition="python: 'toggle' not in view.bika_listing.columns[column]
				                       or view.bika_listing.columns[column].get('toggle', True)"
				tal:define="
					klass python:view.bika_listing.columns[column].get('sortable', True) and 'sortable column' or 'column';
					klass python:'%s%s'%(klass, request.get(form_id+'_sort_on', '') == column and ' sort_on' or '');
					klass python:'%s %s'%(klass, request.get(form_id+'_sort_on', '') == column and request.get(form_id+'_sort_order','ascending') or '');
					klass python:'%s%s'%(klass, view.bika_listing.columns[column].get('index',None) and ' indexed' or '');"
				tal:attributes="
					id string:foldercontents-${column}-column;
					class klass">
				<span tal:replace="structure python:view.bika_listing.columns[  column  ]['title']"/>
			</th>
		</tal:col>
	</tr>

	</thead>

	<tbody class="item-listing-tbody"
		tal:condition="view/items"
		tal:define="selected_cats python: view.bika_listing.selected_cats(view.batch)">

<tal:comment replace="nothing">*************** TR
Table data rows start here
********************************</tal:comment>
<tal:cats
	tal:repeat="cat python: view.bika_listing.categories + ['None',]">
	<tr tal:condition="python: view.bika_listing.show_categories and cat and cat != 'None'">
		<th
			style="text-align: left;"
			tal:attributes="
				colspan nr_cols;
				cat cat;
				class python:(cat in selected_cats) and 'cat_header expanded' or 'cat_header collapsed'"
			tal:content="structure cat">
		</th>
	</tr>
	<tal:items
		tal:repeat="item view/batch">
		<tr tal:condition="python:item.has_key('id') and item.get('category', 'None') == cat"
			tal:define="keyword python:item.has_key('Keyword') and item['Keyword'] or '';
						tmpstyle python:(cat != 'None' and not cat in selected_cats) and 'display:none;;' or '';
						tmpstyle python:view.context.bika_setup.getEnableAnalysisRemarks() and tmpstyle + 'border-bottom:0 !important;;' or tmpstyle;"
			tal:attributes="
			     style tmpstyle;
				cat cat;
				class item/table_row_class;
				id string:folder-contents-item-${item/uid};
				uid item/uid;
				keyword keyword;">

		<tal:comment replace="nothing">***************
		Individual items' row_data is stored on each row.
		This is used to pass information along to javascript.
		********************************</tal:comment>
		<input type="hidden" tal:attributes="
			id string:${item/uid}_row_data;
			value item/row_data|nothing;"/>

<tal:comment replace="nothing">***************
Draggable column for manually ordering items
********************************</tal:comment>
	<td tal:condition="view/bika_listing/show_sort_column" class="draggable">
	 <tal:block tal:define="quoted_id item/uid;">
	  <a href=""
		 title="Move item up"
		 i18n:attributes="title title_move_item_up;"
		 tal:attributes="href string:${view/base_url}/folder_position?position=up&amp;id=${quoted_id}">
		&#9650;
	  </a>
	  <a href=""
		 title="Move item down"
		 i18n:attributes="title title_move_item_down;"
		 tal:attributes="href string:${view/base_url}/folder_position?position=down&amp;id=${quoted_id}">
		&#9660;
	  </a>
	 </tal:block>
	</td>

<tal:comment replace="nothing">***************
Item select checkboxes.
********************************</tal:comment>
	<td style="width:24px;"
		tal:condition="view/bika_listing/show_select_column"
		tal:define="cl python:'class' in item and 'select_column' in item['class'] and
					item['class']['select_column'] or '';"
		tal:attributes="class string:notDraggable ${item/state_class} $cl">
	<tal:replace
		tal:condition="python: 'replace' in item and 'select_column' in item['replace']"
		tal:content="structure python: item['replace']['select_column']"/>
	<tal:noreplace
		tal:condition="python: 'replace' not in item or 'select_column' not in item['replace']">
		<input type="checkbox"
			class="noborder"
			tal:attributes="
				name    string:${view/bika_listing/select_checkbox_name}:list;
				value   item/uid;
				id      string:${view/bika_listing/form_id}_cb_${item/uid};
				item_title item/title;
				alt     python:view.msg_select_item(item);
				tabindex string:1000;
				checked python:item.has_key('selected') and item['selected'] and 'yes' or '';"/>
		<input type="hidden"
			name="selected_obj_uids:list"
			value="#"
			tal:attributes="
				value item/uid;
				name string:${view/bika_listing/form_id}_selected_obj_uids:list" />
		<label
			tal:content="item/title"
			tal:attributes="for string:${view/bika_listing/form_id}_cb_${item/uid}"
			class="hiddenStructure"/>
	</tal:noreplace>
	</td>

<tal:comment replace="nothing">***************  TD.
Table cells for each column from in review_state's column list.
********************</tal:comment>

	<tal:cell
		tal:repeat="column review_state/columns">
	<tal:rowcolspan
		tal:condition="python: 'toggle' not in view.bika_listing.columns[column]
		                       or view.bika_listing.columns[column].get('toggle', True)"
		tal:define="
			dummy python: 'rowspan' in item and column in item['rowspan'] and rowspan_max.update({column: item['rowspan'][column]});
			dummy python: column in rowspan_max or rowspan_max.update({column: 1});
			dummy python: rowspan.update({column: 'rowspan' in item and column in item['rowspan'] and item['rowspan'][column] or rowspan.get('column', 2)-1});
			global colspan_max python: 'colspan' in item and column in item['colspan'] and int(item['colspan'][column]) or colspan_max;
			global colspan python:     'colspan' in item and column in item['colspan'] and int(item['colspan'][column]) or (colspan - 1);
			global colspan_max python: colspan < 1 and 1 or colspan_max;
			global colspan python:     colspan < 1 and 1 or colspan;">
	<td
		tal:condition="python:rowspan[column] == rowspan_max[column] and colspan == colspan_max"
		tal:define="
			allow_edit python:view.bika_listing.allow_edit
			                  and column in item['allow_edit']
							  and item.get('edit_condition', {}).get(column, True);
			required python:'required' in item and column in item['required'] or False;
			before python:column in item['before'] and
				item['before'][column] or '';
			after python:column in item['after'] and
				item['after'][column] or '';
			replace python:column in item['replace'] and
				item['replace'][column] or '';
			field_type python:'type' in columns[column] and
				columns[column]['type'] or 'string';
			field_type python:'choices' in item and column in item['choices'] and
				'choices' or field_type;
			input_class python:'input_class' in columns[column] and
				columns[column]['input_class'] or 'numeric';
			input_width python:'input_width' in columns[column] and
				columns[column]['input_width'] or '5';
			table_row_class python:'table_row_class' in columns[column] and
				columns[column]['table_row_class'] or '';
			klass python:column in item['class'] and
				item['class'][column] or '';"
		tal:attributes="
			class python:' '.join((table_row_class, klass, item['state_class'], column));
			rowspan python:rowspan[column];
			colspan python:colspan;">

	<tal:comment replace="nothing"><!-- before structure --></tal:comment>
	<span class="before"
		tal:content="structure before"/>

	<tal:comment replace="nothing"><!-- replace structure --></tal:comment>
	<tal:before
		tal:replace="structure replace"/>

	<span tal:omit-tag="python:True"
		tal:condition="not:replace">

	<span tal:omit-tag="python:True"
		tal:condition="python:field_type == 'string'">
		<tal:comment replace="nothing"><!-- string --></tal:comment>
		<tal:comment replace="nothing"><!-- interim field --></tal:comment>
		<span tal:omit-tag="python:True"
			tal:condition="python:type(item[column]) == type({})">
			<tal:comment replace="nothing"><!-- edit --></tal:comment>
			<input
				type="text" style="font-size: 100%"
				autocomplete="off"
				tal:condition="python:allow_edit"
				tal:attributes="
					class python:'listing_string_entry %s' % input_class;
					tabindex tabindex/next;
					size input_width;
					uid string:${item/uid};
					st_uid string:${item/st_uid};
					objectId string:${item/id};
					field python:column;
					value python:item[column]['value'];"/>
			<tal:comment replace="nothing"><!-- view --></tal:comment>
			<span
				tal:condition="python:not allow_edit"
				tal:content="python:item[column]['value']"
				tal:attributes="class item/state_class"/>
			<input
				type="hidden"
				tal:condition="python:not allow_edit"
				tal:attributes="
					size input_width;
					uid string:${item/uid};
					st_uid string:${item/st_uid|nothing};
					field python:column;
					value python:item[column]['value'];"/>
		</span>
		<tal:comment replace="nothing"><!-- regular field --></tal:comment>
		<span tal:omit-tag="python:True"
			tal:condition="python:type(item[column]) != type({}) and
							not (column == 'Result' and item['calculation'])">
			<tal:comment replace="nothing"><!-- edit --></tal:comment>
			<input
				type="text" style="font-size: 100%"
				autocomplete="off"
				tal:condition="python:allow_edit"
				tal:attributes="
					class python:'listing_string_entry %s' % input_class;
					tabindex tabindex/next;
					size input_width;
					uid string:${item/uid};
					st_uid string:${item/st_uid|nothing};
					objectId string:${item/id};
					field python:column;
					name python:column == view.bika_listing.select_checkbox_name and '%s_column_value.%s:records'%(column, item['uid']) or '%s.%s:records'%(column, item['uid']);
					value python:item[column] and
									item[column] or '';"/>
			<tal:comment replace="nothing"><!-- view --></tal:comment>
			<span
				tal:condition="python:not allow_edit and column == 'Result'"
				tal:content="python:item['formatted_result'] and item['formatted_result'] or item[column]"
				tal:attributes="class item/state_class"/>
			<span
				tal:condition="python:not allow_edit and column != 'Result'"
				tal:content="python:item[column] and item[column] or ''"
				tal:attributes="class item/state_class"/>
			<input
				type="hidden"
				tal:condition="python:not allow_edit"
				tal:attributes="
					size input_width;
					uid string:${item/uid};
					st_uid string:${item/st_uid|nothing};
					objectId string:${item/id};
					field python:column;
					name python:column == view.bika_listing.select_checkbox_name and '%s_column_value.%s:records'%(column, item['uid']) or '%s.%s:records'%(column, item['uid']);
					value python:item[column];"/>
		</span>
		<tal:comment replace="nothing"><!-- calculated result field. --></tal:comment>
		<span tal:omit-tag="python:True"
			tal:condition="python:column == 'Result' and
								item['calculation']">
			<span
				tal:attributes="
					field string:formatted_result;
					uid item/uid;
					objectId string:${item/id};
					size input_width;"
				tal:content="python:item['formatted_result']"/>
			<input
				type="hidden"
				tal:attributes="
					uid string:${item/uid};
					st_uid string:${item/st_uid|nothing};
					objectId string:${item/id};
					field string:Result;
					name string:Result.${item/uid}:records;
					value python:item['Result'];"/>
		</span>

	</span>

	<tal:comment replace="nothing"><!-- boolean --></tal:comment>
	<span tal:omit-tag="python:True"
		tal:condition="python:field_type == 'boolean'">
		<input
			type="checkbox" style="font-size: 100%"
			tal:condition="allow_edit"
			tal:attributes="
				class item/state_class;
				uid string:${item/uid};
				id python:'%s-%s' % (item['uid'], column);
				name string:${column}.${item/uid}:record:ignore-empty;
				checked python:item.get(column) and 'yes' or '';"/>
		<tal:comment replace="nothing"><!-- will not display if readonly and false --></tal:comment>
		<input
			type="checkbox"
			tal:condition="python:not allow_edit and item.get(column)"
			disabled="disabled"
			tal:attributes="
				class item/state_class;
				checked python:item.get(column) and 'yes' or '';"/>
	</span>

	<tal:comment replace="nothing"><!-- choices --></tal:comment>
	<span tal:omit-tag="python:True"
		tal:condition="python:field_type == 'choices'">
		<span tal:condition="python: allow_edit">
			<select class="listing_select_entry" style="font-size: 100%"
				tal:condition="python:column in item['choices']"
				tal:attributes="
					tabindex tabindex/next;
					field column;
					name string:${column}.${item/uid}:records;
					uid item/uid;">
				<option value="" tal:condition="not:required"></option>
				<tal:options tal:repeat="option python:item['choices'][column]">
					<option
						tal:attributes="
							value python:option['ResultValue'];
							selected python:item[column] == option['ResultValue']
											and 'selected' or '';"
						tal:content="python:option['ResultText']">
					</option>
				</tal:options>
			</select>
		</span>
		<span tal:omit-tag="python:True"
			tal:condition="python:not allow_edit">
			<span>
				<input
					type="hidden"
					tal:attributes="
						uid string:${item/uid};
						field python:column;
						value python:item[column];
						name string:${column}.${item/uid}:records"/>
			</span>
			<span
				tal:content="python:item.has_key('formatted_result') and item['formatted_result'] or item[column]"
				tal:attributes="class string:${item/state_class} result"/>
		</span>
	</span>

	<tal:comment replace="nothing"><!-- unit for Interim Fields --></tal:comment>
	<em tal:content="python:type(item[column]) == type({}) and item[column].get('unit', None) or ''"
		class="discreet" style="white-space:nowrap;"/>

	<tal:comment replace="nothing"><!-- unit for Result --></tal:comment>
	<em tal:condition="python:'Unit' in item and
							(column == 'Result' or
								'interim_fields' in item and column in item['interim_fields'])"
		class="discreet"
		style="white-space:nowrap;"
		tal:content="python:item['Unit']"/>

	<tal:comment replace="nothing"><!-- alert container --></tal:comment>
	<span class="alert" tal:attributes="
		uid python:item['uid'];
		field column;">
		<tal:comment replace="nothing"><!-- initial out-of-range indicators --></tal:comment>
		<img
			tal:condition="python:column == 'Result' and
			                      item['Result'] and
								  not item['result_in_range'][0]"
			tal:attributes="
				uid item/uid;
				title python:'Result out of range (min: %(min)s, max: %(max)s)'%(item['result_in_range'][1]);
				src string:${portal/absolute_url}/++resource++bika.lims.images/exclamation.png;"
			icon="exclamation"/>
		<img
			tal:condition="python:column == 'Result' and
									item['Result'] and
									item['result_in_range'][0] == '1'"
			tal:attributes="
				uid item/uid;
				title python:'Result out of range (min %(min)s, max %(max)s, error %(error)s%%)'%(item['result_in_range'][1]);
				src string:${portal/absolute_url}/++resource++bika.lims.images/warning.png;"
			icon="warning"/>
		<img
			tal:condition="python:column == 'Result' and item['Result']=='0/0'"
			tal:attributes="
				uid item/uid;
				title python:'No valid result';
				src string:${portal/absolute_url}/++resource++bika.lims.images/exclamation.png;"
			icon="exclamation"/>
	<tal:comment replace="nothing"><!-- shoulder --></tal:comment>
	</span>
	</span> <tal:comment replace="nothing"><!-- </span tal:condition="not:replace"> --></tal:comment>

	<tal:comment replace="nothing"><!-- after structure --></tal:comment>
	<span class="after"
		tal:content="structure after"/>

	</td>
	</tal:rowcolspan>
	</tal:cell>

	</tr>

     <!-- Row Remarks field (for Analyses) -->
<<<<<<<
     <tal:remarks_condition
     	tal:define="remarksenabled python:view.context.bika_setup.getEnableAnalysisRemarks();
     	            isanalysis python:item['obj'].portal_type == 'Analysis';
     	            hasremarks python:True if item.get('Remarks','') else False;
     	            remarksedit python: remarksenabled and 'Remarks' in item.get('allowedit',[]);
     	            showremarks python:isanalysis and (hasremarks or remarksedit);">

		<tr	tal:condition="showremarks"
=======
     <tal:remarks_condition tal:define="allow_edit python:(view.bika_listing.allow_edit
												and 'Remarks' in item['allow_edit'])
												or item.get('calculation', None);">

		<tr	tal:condition="python:view.context.bika_setup.getEnableAnalysisRemarks()
			                     and item.has_key('id')
			                     and item.get('category', 'None') == cat
			                     and hasattr(item['obj'], 'portal_type') and item['obj'].portal_type == 'Analysis' and (
			                     	allow_edit or item.get('Remarks')
			                     )"
>>>>>>>
			tal:define="keyword python:item.has_key('Keyword') and item['Keyword'] or '';"
			tal:attributes="cat cat;
						class item/table_row_class;
						id string:folder-contents-item-${item/uid};
						uid item/uid;
						keyword keyword;">

			<td><span i18n:translate="">Remarks</span>:</td>

			<td tal:attributes="colspan python:int(nr_cols)-1;">
				<input
					type="text" style="font-size: 90%"
					autocomplete="off"
<<<<<<<
					rows="1"
					tal:condition="python:remarksedit==True"
=======
					style="width:95%"
					tal:condition="python:allow_edit"
>>>>>>>
					tal:attributes="
						class python:'listing_remarks';
						tabindex tabindex/next;
						uid string:${item/uid};
						st_uid string:${item/st_uid|nothing};
						objectId string:${item/id};
						name string:Remarks.${item/uid}:records;
						value python:item.get('Remarks', '');"/>
				<span
					style="font-size: 90%"
					autocomplete="off"
<<<<<<<
					tal:condition="python:not allow_edit"
=======
					tal:condition="python:remarksedit==False"
>>>>>>>
					tal:content="python:item.get('Remarks', '')"/>
			</td>
		</tr>
	</tal:remarks_condition>

	</tal:items>
</tal:cats>
</tbody>

<tfoot>
<tr>
<td class="noborder"
	tal:attributes="colspan nr_cols"
	tal:condition="python:(view.batch.multiple_pages and not view.show_all) or (view.bika_listing.show_workflow_action_buttons)">
<table style="margin:0" width="100%">
	<tr class="noborder">
<tal:comment replace="nothing">***************
Workflow Actions
********************************</tal:comment>
		<td class="workflow_actions">
			<span class="workflow_action_buttons"
				tal:define="actions view/get_workflow_actions">
				<span tal:omit-tag="python:True" tal:repeat="action actions"
					tal:condition="view/bika_listing/show_workflow_action_buttons">
					<input
						type="hidden"
						tal:attributes="name action/title;
										value action/id;"/>
					<input
						class="context workflow_action_button action_button allowMultiSubmit"
						type="submit"
						name="workflow_action_button"
						tal:attributes="
							transition action/id;
							value action/title;"/>
				</span>
			</span>
		</td>
<tal:comment replace="nothing">***************
Batching
********************************</tal:comment>
		<td class="batching"
			style="text-align:right">
			<tal:batching
				tal:define="batch view/batch"
				condition="python:batch.multiple_pages and not view.show_all">
				<span class="previous"
				  tal:condition="batch/has_previous">
					<a href=""
                       tal:attributes="href python:view.bika_listing.GET_url(pagenumber=batch.previouspage)">
					   &laquo;
					   <span i18n:domain="plone" i18n:translate="">
						   Previous
						   <span i18n:domain="plone" i18n:name="number" tal:omit-tag="" tal:content="batch/pagesize">n</span>
						   items
					   </span>
					</a>
				</span>
				<!-- Link to first -->
				<span tal:condition="batch/show_link_to_first">
                    <a href="" tal:attributes="href python:view.bika_listing.GET_url(pagenumber=1)">1</a>
					<span tal:condition="batch/second_page_not_in_navlist" tal:omit-tag="">
					   ...
					</span>
				</span>
				<!-- Pagelist with links to previous pages for quick navigation -->
				<span tal:repeat="pagenumber batch/previous_pages" tal:omit-tag="" >
                  <a href="" tal:content="pagenumber" tal:attributes="href python:view.bika_listing.GET_url(pagenumber=pagenumber)"/>
				</span>
				<!-- Current page -->
				<span tal:condition="batch/navlist" tal:omit-tag="">
					[<span tal:content="batch/pagenumber">Current page number</span>]
				</span>
				<!-- Pagelist with links to next pages for quick navigation -->
				<span tal:repeat="pagenumber batch/next_pages" tal:omit-tag="" >
				  <a href="" tal:content="pagenumber" tal:attributes="href python:view.bika_listing.GET_url(pagenumber=pagenumber)"/>
				</span>
				<!-- Link to last -->
				<span tal:condition="batch/show_link_to_last">
					<span tal:condition="batch/before_last_page_not_in_navlist" tal:omit-tag="">
					   ...
					</span>
					<a href=""
                       tal:attributes="href python:view.bika_listing.GET_url(pagenumber=batch.lastpage)"
					   tal:content="string:${batch/lastpage}">3457</a>
				</span>
				<span class="next"
					  tal:condition="batch/has_next">
					<a href=""
                       tal:attributes="href python:view.bika_listing.GET_url(pagenumber=batch.nextpage)">
					   <span i18n:domain="plone" i18n:translate="">
						   Next
						   <span i18n:domain="plone" i18n:name="number" tal:omit-tag="" tal:content="string:${batch/next_item_count}">n</span>
						   items
					   </span>
					   &raquo;
					</a>
				</span>
			</tal:batching>
		</td>
	</tr>
	<tr class="noborder">
		<td class="batching" colspan="2" style="text-align:right">
			<tal:batching
				tal:define="batch view/batch"
				condition="python:batch.multiple_pages and not view.show_all and view.bika_listing.pagesize != 1000">
				<span class="pagesize_selector noborder"
					style="vertical-align:top !important"
					style="text-align:right">
					<select class="pagesize">
						<option value="10" tal:attributes="selected python:int(view.bika_listing.pagesize) == 10 and 'selected' or ''">10</option>
						<option value="25" tal:attributes="selected python:int(view.bika_listing.pagesize) == 25 and 'selected' or ''">25</option>
						<option value="50" tal:attributes="selected python:int(view.bika_listing.pagesize) == 50 and 'selected' or ''">50</option>
						<option value="100" tal:attributes="selected python:int(view.bika_listing.pagesize) == 100 and 'selected' or ''">100</option>
					</select>
					<span class="discreet"
						i18n:domain="bika" i18n:translate="">Items per page</span>
				</span>
			</tal:batching>
		</td>
	</tr>
</table>
</td>
</tr>
</tfoot>

</table>
</div>
</form>
